# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: push

jobs:
  unit-e2e-tests-run:
    name: Unit & E2E tests then Deploy
    runs-on: ubuntu-20.04
    
    steps:
      - name: Setup MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.4.4
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '15.12.0'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Run unit tests
        run: ./gradlew test
      - name: Run E2E tests
        run: ./gradlew cucumber
      - name: Package jar
        run: ./gradlew bootJar
      - name: Copy jar to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "build/libs/eventspark-0.0.1-SNAPSHOT.jar"
          target: "~"
          strip_components: 2
      - name: Restart application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            kill $(ps aux | grep 'eventspark-0.0.1-SNAPSHOT.jar' | grep -v grep | awk '{print $2}')
            nohup java -jar -Dspring.profiles.active=prod eventspark-0.0.1-SNAPSHOT.jar > nohup.out &
      - name: Notify Discord build-monitor channel
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
